DIGEST 328f5ae25282bf9907feb963d8fd47b0
FVC.Verif_strlib
R941:959 VST.floyd.proofauto <> <> lib
R977:985 VC.strlib <> <> lib
inst 997:1005 <> CompSpecs
R1009:1017 VST.veric.mpred <> compspecs class
R1035:1038 VC.strlib <> prog def
def 1061:1065 <> Vprog
R1069:1076 VST.veric.mpred <> varspecs def
R1091:1094 VC.strlib <> prog def
R1121:1128 VC.hints <> <> lib
R1193:1209 Coq.Strings.Ascii <> <> lib
R1474:1479 Coq.Strings.String <> string ind
R1770:1773 compcert.lib.Integers Byte int rec
R2042:2045 compcert.lib.Integers <> byte syndef
def 2167:2185 <> string_to_list_byte
R2191:2196 Coq.Strings.String <> string ind
R2201:2204 Coq.Init.Datatypes <> list ind
R2206:2209 compcert.lib.Integers <> byte syndef
R2222:2222 VC.Verif_strlib <> s var
R2233:2243 Coq.Strings.String <> EmptyString constr
R2248:2250 Coq.Init.Datatypes <> nil constr
R2256:2261 Coq.Strings.String <> String constr
R2310:2350 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2271:2279 compcert.lib.Integers Byte repr def
R2282:2287 Coq.ZArith.BinInt Z of_N def
R2290:2305 Coq.Strings.Ascii <> N_of_ascii def
R2351:2369 VC.Verif_strlib <> string_to_list_byte def
def 2393:2397 <> Hello
def 2429:2434 <> Hello'
R2439:2457 VC.Verif_strlib <> string_to_list_byte def
R2459:2463 VC.Verif_strlib <> Hello def
R2481:2499 VC.Verif_strlib <> string_to_list_byte def
R2501:2505 VC.Verif_strlib <> Hello def
sec 2624:2633 <> StringDemo
var 2648:2648 StringDemo p
R2652:2654 compcert.common.Values <> val ind
R2810:2815 compcert.exportclight.Clightdefs <> tschar def
R2863:2869 VST.floyd.field_at <> data_at def
R2903:2903 VC.Verif_strlib <> StringDemo.p var
R2883:2886 compcert.common.Values <> Vint constr
R2889:2896 compcert.lib.Integers Int repr def
R2875:2880 compcert.exportclight.Clightdefs <> tschar def
R2871:2873 VST.veric.shares <> Tsh def
R3380:3386 VST.floyd.field_at <> data_at def
R3400:3404 VST.floyd.functional_base <> Vbyte def
R3407:3415 compcert.lib.Integers Byte repr def
R3392:3397 compcert.exportclight.Clightdefs <> tschar def
R3388:3390 VST.veric.shares <> Tsh def
R3577:3581 VST.floyd.functional_base <> Vbyte def
R3685:3687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3665:3669 VST.floyd.functional_base <> Vbyte def
R3672:3680 compcert.lib.Integers Byte repr def
R3688:3691 compcert.common.Values <> Vint constr
R3694:3701 compcert.lib.Integers Int repr def
R3759:3761 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3739:3743 VST.floyd.functional_base <> Vbyte def
R3746:3754 compcert.lib.Integers Byte repr def
R3762:3765 compcert.common.Values <> Vint constr
R3768:3775 compcert.lib.Integers Int repr def
R3798:3802 VST.floyd.functional_base <> Vbyte def
R3815:3830 compcert.lib.Integers Byte signed_repr thm
R3815:3830 compcert.lib.Integers Byte signed_repr thm
R3815:3830 compcert.lib.Integers Byte signed_repr thm
R3815:3830 compcert.lib.Integers Byte signed_repr thm
R4144:4150 VST.floyd.entailer <> cstring def
R4477:4483 VST.floyd.entailer <> cstring def
R4496:4496 VC.Verif_strlib <> StringDemo.p var
R4489:4494 VC.Verif_strlib <> Hello' def
R4485:4487 VST.veric.shares <> Tsh def
R4623:4628 VST.msl.seplog <> ::logic:x_'&&'_x not
R4597:4600 VST.msl.seplog <> ::logic:'!!'_x not
R4622:4622 VST.msl.seplog <> ::logic:'!!'_x not
R4601:4602 Coq.Init.Logic <> ::type_scope:'~'_x not
R4603:4604 Coq.Lists.List <> In def
R4616:4621 VC.Verif_strlib <> Hello' def
R4606:4614 compcert.lib.Integers Byte zero def
R4629:4635 VST.floyd.field_at <> data_at def
R4699:4699 VC.Verif_strlib <> StringDemo.p var
R4666:4668 Coq.Lists.List <> map def
R4683:4684 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R4677:4682 VC.Verif_strlib <> Hello' def
R4685:4685 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R4695:4695 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R4686:4694 compcert.lib.Integers Byte zero def
R4670:4674 VST.floyd.functional_base <> Vbyte def
R4642:4647 compcert.exportclight.Clightdefs <> tarray def
R4658:4660 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4649:4654 compcert.exportclight.Clightdefs <> tschar def
R4637:4639 VST.veric.shares <> Tsh def
R5251:5258 VST.floyd.entailer <> cstringn def
R5500:5507 VST.floyd.entailer <> cstringn def
R5523:5523 VC.Verif_strlib <> StringDemo.p var
R5513:5518 VC.Verif_strlib <> Hello' def
R5509:5511 VST.veric.shares <> Tsh def
R5546:5555 VC.Verif_strlib StringDemo <> sec
prf 5815:5834 <> demonstrate_cstring1
R5865:5866 Coq.Init.Logic <> ::type_scope:'~'_x not
R5867:5868 Coq.Lists.List <> In def
R5880:5887 VC.Verif_strlib <> contents var
R5870:5878 compcert.lib.Integers Byte zero def
R5930:5933 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R5898:5901 VST.floyd.sublist <> Znth def
R5914:5917 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5906:5913 VC.Verif_strlib <> contents var
R5918:5918 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5928:5928 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5919:5927 compcert.lib.Integers Byte zero def
R5903:5903 VC.Verif_strlib <> i var
R5934:5942 compcert.lib.Integers Byte zero def
R5954:5957 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R5959:5962 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R5958:5958 VC.Verif_strlib <> i var
R5958:5958 VC.Verif_strlib <> i var
R5963:5969 Coq.ZArith.Zcomplements <> Zlength def
R5971:5978 VC.Verif_strlib <> contents var
R5986:5989 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R5995:5997 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R5991:5993 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5990:5990 VC.Verif_strlib <> i var
R5991:5993 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5990:5990 VC.Verif_strlib <> i var
R5998:6004 Coq.ZArith.Zcomplements <> Zlength def
R6015:6018 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6007:6014 VC.Verif_strlib <> contents var
R6019:6019 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6029:6029 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6020:6028 compcert.lib.Integers Byte zero def
R6927:6929 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R6930:6936 Coq.ZArith.Zcomplements <> Zlength def
R6927:6929 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R6930:6936 Coq.ZArith.Zcomplements <> Zlength def
prf 7281:7300 <> demonstrate_cstring2
R7330:7331 Coq.Init.Logic <> ::type_scope:'~'_x not
R7332:7333 Coq.Lists.List <> In def
R7345:7352 VC.Verif_strlib <> contents var
R7335:7343 compcert.lib.Integers Byte zero def
R7395:7397 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7363:7366 VST.floyd.sublist <> Znth def
R7379:7382 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R7371:7378 VC.Verif_strlib <> contents var
R7383:7383 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R7393:7393 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R7384:7392 compcert.lib.Integers Byte zero def
R7368:7368 VC.Verif_strlib <> i var
R7398:7406 compcert.lib.Integers Byte zero def
R7418:7421 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R7423:7426 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R7422:7422 VC.Verif_strlib <> i var
R7422:7422 VC.Verif_strlib <> i var
R7427:7433 Coq.ZArith.Zcomplements <> Zlength def
R7435:7442 VC.Verif_strlib <> contents var
R7450:7452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7449:7449 VC.Verif_strlib <> i var
R7453:7459 Coq.ZArith.Zcomplements <> Zlength def
R7461:7468 VC.Verif_strlib <> contents var
def 7802:7812 <> strlen_spec
R7818:7825 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R7833:7835 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R7826:7832 VC.strlib <> _strlen def
R7836:7840 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7843:7844 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7850:7851 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7853:7855 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7865:7866 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7870:7871 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7875:7883 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7903:7909 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7987:7996 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8008:8014 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7888:7891 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R7884:7887 VC.strlib <> _str def
R7892:7895 compcert.exportclight.Clightdefs <> tptr def
R7897:7902 compcert.exportclight.Clightdefs <> tschar def
R7997:8000 compcert.exportclight.Clightdefs <> tptr def
R8002:8007 compcert.exportclight.Clightdefs <> tschar def
R7845:7849 VST.msl.shares <> share def
R7856:7859 Coq.Init.Datatypes <> list ind
R7861:7864 compcert.lib.Integers <> byte syndef
R7872:7874 compcert.common.Values <> val ind
R7910:7915 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R7933:7938 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R7916:7929 VST.veric.shares <> readable_share def
R7931:7932 VC.Verif_strlib <> sh var
R7939:7945 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R7959:7964 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R7946:7949 VST.floyd.canon <> temp constr
R7956:7958 VC.Verif_strlib <> str var
R7951:7954 VC.strlib <> _str def
R7965:7969 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R7986:7986 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R7970:7976 VST.floyd.entailer <> cstring def
R7983:7985 VC.Verif_strlib <> str var
R7981:7981 VC.Verif_strlib <> s var
R7978:7979 VC.Verif_strlib <> sh var
R8015:8026 VST.floyd.canon <> :::'PROP'_'()'_x not
R8027:8033 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8083:8088 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8034:8037 VST.floyd.canon <> temp constr
R8049:8055 compcert.common.Values <> Vptrofs def
R8058:8068 compcert.lib.Integers Ptrofs repr def
R8071:8077 Coq.ZArith.Zcomplements <> Zlength def
R8079:8079 VC.Verif_strlib <> s var
R8039:8046 VST.veric.SeparationLogic <> ret_temp def
R8089:8093 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R8110:8110 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R8094:8100 VST.floyd.entailer <> cstring def
R8107:8109 VC.Verif_strlib <> str var
R8105:8105 VC.Verif_strlib <> s var
R8102:8103 VC.Verif_strlib <> sh var
def 8196:8206 <> strcpy_spec
R8212:8219 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R8227:8229 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R8220:8226 VC.strlib <> _strcpy def
R8230:8234 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8238:8239 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8245:8246 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8250:8251 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8257:8258 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8263:8265 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8269:8270 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8272:8274 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8276:8277 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8281:8283 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8287:8288 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8290:8292 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8302:8310 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8331:8332 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8352:8358 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8527:8536 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8548:8554 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8316:8319 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R8311:8315 VC.strlib <> _dest def
R8320:8323 compcert.exportclight.Clightdefs <> tptr def
R8325:8330 compcert.exportclight.Clightdefs <> tschar def
R8337:8340 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R8333:8336 VC.strlib <> _src def
R8341:8344 compcert.exportclight.Clightdefs <> tptr def
R8346:8351 compcert.exportclight.Clightdefs <> tschar def
R8537:8540 compcert.exportclight.Clightdefs <> tptr def
R8542:8547 compcert.exportclight.Clightdefs <> tschar def
R8240:8244 VST.msl.shares <> share def
R8252:8256 VST.msl.shares <> share def
R8266:8268 compcert.common.Values <> val ind
R8275:8275 Coq.Numbers.BinNums <> Z ind
R8284:8286 compcert.common.Values <> val ind
R8293:8296 Coq.Init.Datatypes <> list ind
R8298:8301 compcert.lib.Integers <> byte syndef
R8359:8364 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R8383:8384 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R8403:8404 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R8418:8423 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R8365:8378 VST.veric.shares <> writable_share def
R8380:8382 VC.Verif_strlib <> wsh var
R8385:8398 VST.veric.shares <> readable_share def
R8400:8402 VC.Verif_strlib <> rsh var
R8414:8416 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R8405:8411 Coq.ZArith.Zcomplements <> Zlength def
R8413:8413 VC.Verif_strlib <> s var
R8417:8417 VC.Verif_strlib <> n var
R8424:8430 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8446:8447 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8461:8466 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8431:8434 VST.floyd.canon <> temp constr
R8442:8445 VC.Verif_strlib <> dest var
R8436:8440 VC.strlib <> _dest def
R8448:8451 VST.floyd.canon <> temp constr
R8458:8460 VC.Verif_strlib <> src var
R8453:8456 VC.strlib <> _src def
R8467:8471 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R8507:8508 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R8526:8526 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R8472:8479 VST.floyd.field_at <> data_at_ def
R8503:8506 VC.Verif_strlib <> dest var
R8486:8491 compcert.exportclight.Clightdefs <> tarray def
R8500:8500 VC.Verif_strlib <> n var
R8493:8498 compcert.exportclight.Clightdefs <> tschar def
R8481:8483 VC.Verif_strlib <> wsh var
R8509:8515 VST.floyd.entailer <> cstring def
R8523:8525 VC.Verif_strlib <> src var
R8521:8521 VC.Verif_strlib <> s var
R8517:8519 VC.Verif_strlib <> rsh var
R8555:8566 VST.floyd.canon <> :::'PROP'_'()'_x not
R8567:8573 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8592:8597 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8574:8577 VST.floyd.canon <> temp constr
R8588:8591 VC.Verif_strlib <> dest var
R8579:8586 VST.veric.SeparationLogic <> ret_temp def
R8598:8602 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R8624:8625 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R8643:8643 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R8603:8610 VST.floyd.entailer <> cstringn def
R8620:8623 VC.Verif_strlib <> dest var
R8618:8618 VC.Verif_strlib <> n var
R8616:8616 VC.Verif_strlib <> s var
R8612:8614 VC.Verif_strlib <> wsh var
R8626:8632 VST.floyd.entailer <> cstring def
R8640:8642 VC.Verif_strlib <> src var
R8638:8638 VC.Verif_strlib <> s var
R8634:8636 VC.Verif_strlib <> rsh var
def 8844:8854 <> strcmp_spec
R8860:8867 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R8875:8877 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R8868:8874 VC.strlib <> _strcmp def
R8878:8882 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8886:8887 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8893:8894 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8898:8899 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8905:8906 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8911:8913 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8917:8918 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8921:8923 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8933:8934 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8939:8941 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8945:8946 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8949:8951 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8961:8969 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8990:8991 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9012:9018 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9160:9169 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9174:9179 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R8975:8978 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R8970:8974 VC.strlib <> _str1 def
R8979:8982 compcert.exportclight.Clightdefs <> tptr def
R8984:8989 compcert.exportclight.Clightdefs <> tschar def
R8997:9000 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R8992:8996 VC.strlib <> _str2 def
R9001:9004 compcert.exportclight.Clightdefs <> tptr def
R9006:9011 compcert.exportclight.Clightdefs <> tschar def
R9170:9173 compcert.exportclight.Clightdefs <> tint def
R8888:8892 VST.msl.shares <> share def
R8900:8904 VST.msl.shares <> share def
R8914:8916 compcert.common.Values <> val ind
R8924:8927 Coq.Init.Datatypes <> list ind
R8929:8932 compcert.lib.Integers <> byte syndef
R8942:8944 compcert.common.Values <> val ind
R8952:8955 Coq.Init.Datatypes <> list ind
R8957:8960 compcert.lib.Integers <> byte syndef
R9019:9024 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9043:9044 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9063:9068 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9025:9038 VST.veric.shares <> readable_share def
R9040:9042 VC.Verif_strlib <> sh1 var
R9045:9058 VST.veric.shares <> readable_share def
R9060:9062 VC.Verif_strlib <> sh2 var
R9069:9075 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9091:9092 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9108:9113 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9076:9079 VST.floyd.canon <> temp constr
R9087:9090 VC.Verif_strlib <> str1 var
R9081:9085 VC.strlib <> _str1 def
R9093:9096 VST.floyd.canon <> temp constr
R9104:9107 VC.Verif_strlib <> str2 var
R9098:9102 VC.strlib <> _str2 def
R9114:9118 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9138:9139 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9159:9159 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9119:9125 VST.floyd.entailer <> cstring def
R9134:9137 VC.Verif_strlib <> str1 var
R9131:9132 VC.Verif_strlib <> s1 var
R9127:9129 VC.Verif_strlib <> sh1 var
R9140:9146 VST.floyd.entailer <> cstring def
R9155:9158 VC.Verif_strlib <> str2 var
R9152:9153 VC.Verif_strlib <> s2 var
R9148:9150 VC.Verif_strlib <> sh2 var
R9180:9182 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R9184:9186 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R9190:9195 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R9187:9189 compcert.lib.Integers <> int syndef
R9196:9201 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9253:9258 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R9205:9214 compcert.lib.Integers Int eq_dec thm
R9218:9225 compcert.lib.Integers Int zero def
R9216:9216 VC.Verif_strlib <> i var
R9247:9250 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R9245:9246 VC.Verif_strlib <> s1 var
R9251:9252 VC.Verif_strlib <> s2 var
R9234:9236 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9232:9233 VC.Verif_strlib <> s1 var
R9237:9238 VC.Verif_strlib <> s2 var
R9259:9265 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9288:9293 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9266:9269 VST.floyd.canon <> temp constr
R9281:9284 compcert.common.Values <> Vint constr
R9286:9286 VC.Verif_strlib <> i var
R9271:9278 VST.veric.SeparationLogic <> ret_temp def
R9294:9298 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9318:9319 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9339:9339 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9299:9305 VST.floyd.entailer <> cstring def
R9314:9317 VC.Verif_strlib <> str1 var
R9311:9312 VC.Verif_strlib <> s1 var
R9307:9309 VC.Verif_strlib <> sh1 var
R9320:9326 VST.floyd.entailer <> cstring def
R9335:9338 VC.Verif_strlib <> str2 var
R9332:9333 VC.Verif_strlib <> s2 var
R9328:9330 VC.Verif_strlib <> sh2 var
R9187:9189 compcert.lib.Integers <> int syndef
def 9354:9358 <> Gprog
R9362:9369 VST.veric.mpred <> funspecs def
R9407:9408 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R9420:9421 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R9433:9434 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R9446:9447 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R9409:9419 VC.Verif_strlib <> strlen_spec def
R9422:9432 VC.Verif_strlib <> strcpy_spec def
R9435:9445 VC.Verif_strlib <> strcmp_spec def
R9402:9405 VC.strlib <> prog def
R9407:9408 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R9420:9421 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R9433:9434 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R9446:9447 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R9409:9419 VC.Verif_strlib <> strlen_spec def
R9422:9432 VC.Verif_strlib <> strcpy_spec def
R9435:9445 VC.Verif_strlib <> strcmp_spec def
prf 9627:9637 <> body_strlen
R9640:9649 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R9672:9682 VC.Verif_strlib <> strlen_spec def
R9663:9670 VC.strlib <> f_strlen def
R9657:9661 VC.Verif_strlib <> Gprog def
R9651:9655 VC.Verif_strlib <> Vprog def
R10288:10294 VST.floyd.entailer <> cstring def
R11459:11461 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R11463:11465 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R11467:11470 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R11471:11476 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11499:11502 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11478:11481 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R11483:11485 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R11482:11482 VC.Verif_strlib <> i var
R11482:11482 VC.Verif_strlib <> i var
R11495:11497 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11486:11492 Coq.ZArith.Zcomplements <> Zlength def
R11503:11509 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11523:11524 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11558:11561 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11510:11513 VST.floyd.canon <> temp constr
R11515:11518 VC.strlib <> _str def
R11525:11528 VST.floyd.canon <> temp constr
R11534:11540 compcert.common.Values <> Vptrofs def
R11543:11553 compcert.lib.Integers Ptrofs repr def
R11555:11555 VC.Verif_strlib <> i var
R11530:11531 VC.strlib <> _i def
R11562:11566 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R11654:11654 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R11567:11573 VST.floyd.field_at <> data_at def
R11621:11623 Coq.Lists.List <> map def
R11633:11636 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11637:11637 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R11647:11647 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R11638:11646 compcert.lib.Integers Byte zero def
R11625:11629 VST.floyd.functional_base <> Vbyte def
R11579:11584 compcert.exportclight.Clightdefs <> tarray def
R11603:11605 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11594:11600 Coq.ZArith.Zcomplements <> Zlength def
R11586:11591 compcert.exportclight.Clightdefs <> tschar def
R11466:11466 Coq.Numbers.BinNums <> Z ind
R11459:11461 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R11463:11465 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R11467:11470 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R11471:11476 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11499:11502 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R11478:11481 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R11483:11485 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R11482:11482 VC.Verif_strlib <> i var
R11482:11482 VC.Verif_strlib <> i var
R11495:11497 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11486:11492 Coq.ZArith.Zcomplements <> Zlength def
R11503:11509 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11523:11524 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11558:11561 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R11510:11513 VST.floyd.canon <> temp constr
R11515:11518 VC.strlib <> _str def
R11525:11528 VST.floyd.canon <> temp constr
R11534:11540 compcert.common.Values <> Vptrofs def
R11543:11553 compcert.lib.Integers Ptrofs repr def
R11555:11555 VC.Verif_strlib <> i var
R11530:11531 VC.strlib <> _i def
R11562:11566 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R11654:11654 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R11567:11573 VST.floyd.field_at <> data_at def
R11621:11623 Coq.Lists.List <> map def
R11633:11636 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11637:11637 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R11647:11647 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R11638:11646 compcert.lib.Integers Byte zero def
R11625:11629 VST.floyd.functional_base <> Vbyte def
R11579:11584 compcert.exportclight.Clightdefs <> tarray def
R11603:11605 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R11594:11600 Coq.ZArith.Zcomplements <> Zlength def
R11586:11591 compcert.exportclight.Clightdefs <> tschar def
R11466:11466 Coq.Numbers.BinNums <> Z ind
R12507:12517 compcert.x86_32.Archi <> ptr64 def
R12718:12724 compcert.common.Values <> Vptrofs def
R13112:13114 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13089:13095 compcert.common.Values <> Vptrofs def
R13098:13108 compcert.lib.Integers Ptrofs repr def
R13110:13110 VC.Verif_strlib <> n var
R13115:13118 compcert.common.Values <> Vint constr
R13121:13128 compcert.lib.Integers Int repr def
R13130:13130 VC.Verif_strlib <> n var
R13112:13114 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13089:13095 compcert.common.Values <> Vptrofs def
R13098:13108 compcert.lib.Integers Ptrofs repr def
R13110:13110 VC.Verif_strlib <> n var
R13115:13118 compcert.common.Values <> Vint constr
R13121:13128 compcert.lib.Integers Int repr def
R13130:13130 VC.Verif_strlib <> n var
prf 13859:13876 <> strcpy_then_clause
R13894:13898 VST.msl.shares <> share def
R13908:13910 compcert.common.Values <> val ind
R13917:13917 Coq.Numbers.BinNums <> Z ind
R13924:13927 Coq.Init.Datatypes <> list ind
R13929:13932 compcert.lib.Integers <> byte syndef
R13951:13956 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13973:13980 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14213:14219 VST.msl.seplog <> :::x_'|--'_x not
R13981:13987 VST.floyd.field_at <> data_at def
R14209:14212 VC.Verif_strlib <> dest var
R14053:14063 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14018:14020 Coq.Lists.List <> map def
R14029:14035 VST.floyd.sublist <> sublist def
R14051:14051 VC.Verif_strlib <> s var
R14040:14046 Coq.ZArith.Zcomplements <> Zlength def
R14048:14048 VC.Verif_strlib <> s var
R14022:14026 VST.floyd.functional_base <> Vbyte def
R14064:14071 VST.floyd.sublist <> upd_Znth def
R14133:14136 compcert.common.Values <> Vint constr
R14139:14146 compcert.lib.Integers Int repr def
R14149:14159 compcert.lib.Integers Byte signed def
R14162:14165 VST.floyd.sublist <> Znth def
R14181:14184 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14180:14180 VC.Verif_strlib <> s var
R14185:14185 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14195:14195 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14186:14194 compcert.lib.Integers Byte zero def
R14168:14174 Coq.ZArith.Zcomplements <> Zlength def
R14176:14176 VC.Verif_strlib <> s var
R14076:14086 compcert.lib.Coqlib <> list_repeat def
R14115:14120 compcert.common.Values <> Vundef constr
R14089:14096 Coq.ZArith.BinInt Z to_nat def
R14100:14102 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14099:14099 VC.Verif_strlib <> n var
R14103:14109 Coq.ZArith.Zcomplements <> Zlength def
R14111:14111 VC.Verif_strlib <> s var
R13994:13999 compcert.exportclight.Clightdefs <> tarray def
R14008:14008 VC.Verif_strlib <> n var
R14001:14006 compcert.exportclight.Clightdefs <> tschar def
R13989:13991 VC.Verif_strlib <> wsh var
R14220:14226 VST.floyd.field_at <> data_at def
R14365:14368 VC.Verif_strlib <> dest var
R14287:14303 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14259:14261 Coq.Lists.List <> map def
R14271:14274 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14270:14270 VC.Verif_strlib <> s var
R14275:14275 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14285:14285 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14276:14284 compcert.lib.Integers Byte zero def
R14263:14267 VST.floyd.functional_base <> Vbyte def
R14304:14314 compcert.lib.Coqlib <> list_repeat def
R14349:14354 compcert.common.Values <> Vundef constr
R14317:14324 Coq.ZArith.BinInt Z to_nat def
R14328:14331 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14345:14345 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R14327:14327 VC.Verif_strlib <> n var
R14341:14343 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14332:14338 Coq.ZArith.Zcomplements <> Zlength def
R14340:14340 VC.Verif_strlib <> s var
R14233:14238 compcert.exportclight.Clightdefs <> tarray def
R14247:14247 VC.Verif_strlib <> n var
R14240:14245 compcert.exportclight.Clightdefs <> tschar def
R14228:14230 VC.Verif_strlib <> wsh var
R13957:13958 Coq.Init.Logic <> ::type_scope:'~'_x not
R13959:13960 Coq.Lists.List <> In def
R13972:13972 VC.Verif_strlib <> s var
R13962:13970 compcert.lib.Integers Byte zero def
R13947:13949 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R13938:13944 Coq.ZArith.Zcomplements <> Zlength def
R13946:13946 VC.Verif_strlib <> s var
R13950:13950 VC.Verif_strlib <> n var
R14392:14404 VST.msl.log_normalize <> derives_refl' thm
R14392:14404 VST.msl.log_normalize <> derives_refl' thm
R14422:14437 VST.floyd.sublist <> list_repeat_app' thm
R14486:14498 VST.floyd.sublist <> upd_Znth_app1 thm
R14550:14558 VST.floyd.sublist <> app_Znth2 thm
R14614:14624 VST.floyd.sublist <> Znth_0_cons thm
prf 14831:14848 <> strcpy_else_clause
R14889:14894 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14911:14916 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14939:14944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14983:14991 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15213:15219 VST.msl.seplog <> :::x_'|--'_x not
R14992:14998 VST.floyd.field_at <> data_at def
R15209:15212 VC.Verif_strlib <> dest var
R15029:15036 VST.floyd.sublist <> upd_Znth def
R15149:15152 compcert.common.Values <> Vint constr
R15155:15162 compcert.lib.Integers Int repr def
R15165:15175 compcert.lib.Integers Byte signed def
R15178:15181 VST.floyd.sublist <> Znth def
R15187:15190 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15186:15186 VC.Verif_strlib <> s var
R15191:15191 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R15201:15201 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R15192:15200 compcert.lib.Integers Byte zero def
R15183:15183 VC.Verif_strlib <> i var
R15066:15092 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15041:15043 Coq.Lists.List <> map def
R15052:15058 VST.floyd.sublist <> sublist def
R15064:15064 VC.Verif_strlib <> s var
R15062:15062 VC.Verif_strlib <> i var
R15045:15049 VST.floyd.functional_base <> Vbyte def
R15093:15103 compcert.lib.Coqlib <> list_repeat def
R15124:15129 compcert.common.Values <> Vundef constr
R15106:15113 Coq.ZArith.BinInt Z to_nat def
R15117:15119 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R15116:15116 VC.Verif_strlib <> n var
R15120:15120 VC.Verif_strlib <> i var
R15038:15038 VC.Verif_strlib <> i var
R15005:15010 compcert.exportclight.Clightdefs <> tarray def
R15019:15019 VC.Verif_strlib <> n var
R15012:15017 compcert.exportclight.Clightdefs <> tschar def
R15000:15002 VC.Verif_strlib <> wsh var
R15220:15226 VST.floyd.field_at <> data_at def
R15348:15351 VC.Verif_strlib <> dest var
R15288:15302 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15257:15259 Coq.Lists.List <> map def
R15268:15274 VST.floyd.sublist <> sublist def
R15286:15286 VC.Verif_strlib <> s var
R15280:15282 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15279:15279 VC.Verif_strlib <> i var
R15261:15265 VST.floyd.functional_base <> Vbyte def
R15303:15313 compcert.lib.Coqlib <> list_repeat def
R15340:15345 compcert.common.Values <> Vundef constr
R15316:15323 Coq.ZArith.BinInt Z to_nat def
R15327:15330 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R15336:15336 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R15326:15326 VC.Verif_strlib <> n var
R15332:15334 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15331:15331 VC.Verif_strlib <> i var
R15233:15238 compcert.exportclight.Clightdefs <> tarray def
R15247:15247 VC.Verif_strlib <> n var
R15240:15245 compcert.exportclight.Clightdefs <> tschar def
R15228:15230 VC.Verif_strlib <> wsh var
R14970:14973 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R14945:14948 VST.floyd.sublist <> Znth def
R14954:14957 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R14953:14953 VC.Verif_strlib <> s var
R14958:14958 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14968:14968 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R14959:14967 compcert.lib.Integers Byte zero def
R14950:14950 VC.Verif_strlib <> i var
R14974:14982 compcert.lib.Integers Byte zero def
R14918:14921 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R14923:14925 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R14922:14922 VC.Verif_strlib <> i var
R14922:14922 VC.Verif_strlib <> i var
R14935:14937 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R14926:14932 Coq.ZArith.Zcomplements <> Zlength def
R14934:14934 VC.Verif_strlib <> s var
R14895:14896 Coq.Init.Logic <> ::type_scope:'~'_x not
R14897:14898 Coq.Lists.List <> In def
R14910:14910 VC.Verif_strlib <> s var
R14900:14908 compcert.lib.Integers Byte zero def
R14885:14887 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R14876:14882 Coq.ZArith.Zcomplements <> Zlength def
R14884:14884 VC.Verif_strlib <> s var
R14888:14888 VC.Verif_strlib <> n var
R15375:15387 VST.msl.log_normalize <> derives_refl' thm
R15375:15387 VST.msl.log_normalize <> derives_refl' thm
prf 15797:15818 <> data_at_Vundef_example
R15854:15859 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16005:16023 VST.msl.seplog <> :::x_'|--'_x not
R15860:15866 VST.floyd.field_at <> data_at def
R16004:16004 VC.Verif_strlib <> p var
R15946:15962 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15900:15910 compcert.lib.Coqlib <> list_repeat def
R15930:15934 VST.floyd.functional_base <> Vbyte def
R15936:15944 compcert.lib.Integers Byte zero def
R15913:15920 Coq.ZArith.BinInt Z to_nat def
R15924:15924 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15923:15923 VC.Verif_strlib <> i var
R15963:15973 compcert.lib.Coqlib <> list_repeat def
R15996:16001 compcert.common.Values <> Vundef constr
R15976:15983 Coq.ZArith.BinInt Z to_nat def
R15987:15988 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R15992:15992 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R15986:15986 VC.Verif_strlib <> n var
R15990:15990 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R15989:15989 VC.Verif_strlib <> i var
R15872:15877 compcert.exportclight.Clightdefs <> tarray def
R15886:15886 VC.Verif_strlib <> n var
R15879:15884 compcert.exportclight.Clightdefs <> tschar def
R15868:15869 VC.Verif_strlib <> sh var
R16024:16030 VST.floyd.field_at <> data_at def
R16160:16160 VC.Verif_strlib <> p var
R16106:16122 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16064:16074 compcert.lib.Coqlib <> list_repeat def
R16090:16094 VST.floyd.functional_base <> Vbyte def
R16096:16104 compcert.lib.Integers Byte zero def
R16077:16084 Coq.ZArith.BinInt Z to_nat def
R16086:16086 VC.Verif_strlib <> i var
R16123:16133 compcert.lib.Coqlib <> list_repeat def
R16152:16157 compcert.common.Values <> Vundef constr
R16136:16143 Coq.ZArith.BinInt Z to_nat def
R16147:16147 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16146:16146 VC.Verif_strlib <> n var
R16148:16148 VC.Verif_strlib <> i var
R16036:16041 compcert.exportclight.Clightdefs <> tarray def
R16050:16050 VC.Verif_strlib <> n var
R16043:16048 compcert.exportclight.Clightdefs <> tschar def
R16032:16033 VC.Verif_strlib <> sh var
R15845:15848 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R15850:15852 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R15849:15849 VC.Verif_strlib <> i var
R15849:15849 VC.Verif_strlib <> i var
R15853:15853 VC.Verif_strlib <> n var
R16487:16499 VST.msl.log_normalize <> derives_refl' thm
R16487:16499 VST.msl.log_normalize <> derives_refl' thm
R16522:16537 VST.floyd.sublist <> list_repeat_app' thm
R16522:16537 VST.floyd.sublist <> list_repeat_app' thm
R16522:16537 VST.floyd.sublist <> list_repeat_app' thm
R16559:16559 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16570:16573 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16581:16581 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16575:16576 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16580:16580 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16578:16578 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16559:16559 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16570:16573 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16581:16581 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16575:16576 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16580:16580 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16578:16578 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16605:16620 VST.floyd.sublist <> list_repeat_app' thm
R16605:16620 VST.floyd.sublist <> list_repeat_app' thm
R16605:16620 VST.floyd.sublist <> list_repeat_app' thm
R16641:16647 Coq.Lists.List <> app_ass syndef
R16641:16647 Coq.Lists.List <> app_ass syndef
R16641:16647 Coq.Lists.List <> app_ass syndef
R16641:16647 Coq.Lists.List <> app_ass syndef
prf 16795:16816 <> data_at_Vundef_example
R16852:16857 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17003:17021 VST.msl.seplog <> :::x_'|--'_x not
R16858:16864 VST.floyd.field_at <> data_at def
R17002:17002 VC.Verif_strlib <> p var
R16944:16960 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16898:16908 compcert.lib.Coqlib <> list_repeat def
R16928:16932 VST.floyd.functional_base <> Vbyte def
R16934:16942 compcert.lib.Integers Byte zero def
R16911:16918 Coq.ZArith.BinInt Z to_nat def
R16922:16922 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16921:16921 VC.Verif_strlib <> i var
R16961:16971 compcert.lib.Coqlib <> list_repeat def
R16994:16999 compcert.common.Values <> Vundef constr
R16974:16981 Coq.ZArith.BinInt Z to_nat def
R16985:16986 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16990:16990 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16984:16984 VC.Verif_strlib <> n var
R16988:16988 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16987:16987 VC.Verif_strlib <> i var
R16870:16875 compcert.exportclight.Clightdefs <> tarray def
R16884:16884 VC.Verif_strlib <> n var
R16877:16882 compcert.exportclight.Clightdefs <> tschar def
R16866:16867 VC.Verif_strlib <> sh var
R17022:17028 VST.floyd.field_at <> data_at def
R17158:17158 VC.Verif_strlib <> p var
R17104:17120 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17062:17072 compcert.lib.Coqlib <> list_repeat def
R17088:17092 VST.floyd.functional_base <> Vbyte def
R17094:17102 compcert.lib.Integers Byte zero def
R17075:17082 Coq.ZArith.BinInt Z to_nat def
R17084:17084 VC.Verif_strlib <> i var
R17121:17131 compcert.lib.Coqlib <> list_repeat def
R17150:17155 compcert.common.Values <> Vundef constr
R17134:17141 Coq.ZArith.BinInt Z to_nat def
R17145:17145 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17144:17144 VC.Verif_strlib <> n var
R17146:17146 VC.Verif_strlib <> i var
R17034:17039 compcert.exportclight.Clightdefs <> tarray def
R17048:17048 VC.Verif_strlib <> n var
R17041:17046 compcert.exportclight.Clightdefs <> tschar def
R17030:17031 VC.Verif_strlib <> sh var
R16843:16846 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R16848:16850 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R16847:16847 VC.Verif_strlib <> i var
R16847:16847 VC.Verif_strlib <> i var
R16851:16851 VC.Verif_strlib <> n var
R17187:17202 VST.floyd.sublist <> list_repeat_app' thm
R17187:17202 VST.floyd.sublist <> list_repeat_app' thm
R17187:17202 VST.floyd.sublist <> list_repeat_app' thm
R17224:17224 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17235:17238 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17246:17246 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17240:17241 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17245:17245 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17243:17243 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17224:17224 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17235:17238 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17246:17246 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17240:17241 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17245:17245 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17243:17243 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17270:17285 VST.floyd.sublist <> list_repeat_app' thm
R17270:17285 VST.floyd.sublist <> list_repeat_app' thm
R17270:17285 VST.floyd.sublist <> list_repeat_app' thm
R17306:17312 Coq.Lists.List <> app_ass syndef
R17306:17312 Coq.Lists.List <> app_ass syndef
R17306:17312 Coq.Lists.List <> app_ass syndef
R17306:17312 Coq.Lists.List <> app_ass syndef
R17321:17345 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17683:17707 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17683:17707 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17683:17707 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17736:17760 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17736:17760 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17736:17760 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17789:17813 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17789:17813 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17789:17813 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17842:17866 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17842:17866 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R17842:17866 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
prf 17967:17980 <> cancel_example
R18062:18067 VST.msl.seplog <> :::x_'|--'_x not
R18033:18035 VST.msl.seplog <> ::logic:x_'*'_x not
R18007:18013 VST.floyd.field_at <> data_at def
R18032:18032 VC.Verif_strlib <> p var
R18024:18027 compcert.common.Values <> Vint constr
R18029:18029 VC.Verif_strlib <> i var
R18018:18021 compcert.exportclight.Clightdefs <> tint def
R18015:18016 VC.Verif_strlib <> sh var
R18036:18042 VST.floyd.field_at <> data_at def
R18061:18061 VC.Verif_strlib <> q var
R18053:18056 compcert.common.Values <> Vint constr
R18058:18058 VC.Verif_strlib <> j var
R18047:18050 compcert.exportclight.Clightdefs <> tint def
R18044:18045 VC.Verif_strlib <> sh var
R18094:18096 VST.msl.seplog <> ::logic:x_'*'_x not
R18068:18074 VST.floyd.field_at <> data_at def
R18093:18093 VC.Verif_strlib <> p var
R18085:18088 compcert.common.Values <> Vint constr
R18090:18090 VC.Verif_strlib <> i var
R18079:18082 compcert.exportclight.Clightdefs <> tint def
R18076:18077 VC.Verif_strlib <> sh var
R18097:18103 VST.floyd.field_at <> data_at def
R18122:18122 VC.Verif_strlib <> q var
R18114:18119 compcert.common.Values <> Vundef constr
R18108:18111 compcert.exportclight.Clightdefs <> tint def
R18105:18106 VC.Verif_strlib <> sh var
R18279:18292 VST.msl.seplog <> sepcon_derives meth
R18279:18292 VST.msl.seplog <> sepcon_derives meth
R18371:18382 VST.msl.seplog <> derives_refl meth
R18371:18382 VST.msl.seplog <> derives_refl meth
R18558:18577 VST.floyd.stronger <> stronger_default_val thm
R18558:18577 VST.floyd.stronger <> stronger_default_val thm
prf 18903:18913 <> body_strcpy
R18916:18925 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R18948:18958 VC.Verif_strlib <> strcpy_spec def
R18939:18946 VC.strlib <> f_strcpy def
R18933:18937 VC.Verif_strlib <> Gprog def
R18927:18931 VC.Verif_strlib <> Vprog def
R19133:19139 VST.floyd.entailer <> cstring def
R19141:19148 VST.floyd.entailer <> cstringn def
R19187:19189 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R19191:19193 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R19195:19198 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R19199:19204 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R19227:19230 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R19206:19209 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19211:19213 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19210:19210 VC.Verif_strlib <> i var
R19210:19210 VC.Verif_strlib <> i var
R19223:19225 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19214:19220 Coq.ZArith.Zcomplements <> Zlength def
R19231:19237 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R19265:19266 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R19282:19283 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R19297:19300 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R19238:19241 VST.floyd.canon <> temp constr
R19247:19250 compcert.common.Values <> Vint constr
R19253:19260 compcert.lib.Integers Int repr def
R19262:19262 VC.Verif_strlib <> i var
R19243:19244 VC.strlib <> _i def
R19267:19270 VST.floyd.canon <> temp constr
R19272:19276 VC.strlib <> _dest def
R19284:19287 VST.floyd.canon <> temp constr
R19289:19292 VC.strlib <> _src def
R19301:19305 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R19417:19425 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R19504:19504 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R19306:19312 VST.floyd.field_at <> data_at def
R19370:19373 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19345:19347 Coq.Lists.List <> map def
R19356:19362 VST.floyd.sublist <> sublist def
R19366:19366 VC.Verif_strlib <> i var
R19349:19353 VST.floyd.functional_base <> Vbyte def
R19374:19384 compcert.lib.Coqlib <> list_repeat def
R19405:19410 compcert.common.Values <> Vundef constr
R19387:19394 Coq.ZArith.BinInt Z to_nat def
R19398:19400 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R19401:19401 VC.Verif_strlib <> i var
R19319:19324 compcert.exportclight.Clightdefs <> tarray def
R19326:19331 compcert.exportclight.Clightdefs <> tschar def
R19426:19432 VST.floyd.field_at <> data_at def
R19471:19473 Coq.Lists.List <> map def
R19483:19486 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19487:19487 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R19497:19497 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R19488:19496 compcert.lib.Integers Byte zero def
R19475:19479 VST.floyd.functional_base <> Vbyte def
R19439:19444 compcert.exportclight.Clightdefs <> tarray def
R19463:19465 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19454:19460 Coq.ZArith.Zcomplements <> Zlength def
R19446:19451 compcert.exportclight.Clightdefs <> tschar def
R19194:19194 Coq.Numbers.BinNums <> Z ind
R19187:19189 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R19191:19193 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R19195:19198 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R19199:19204 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R19227:19230 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R19206:19209 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19211:19213 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R19210:19210 VC.Verif_strlib <> i var
R19210:19210 VC.Verif_strlib <> i var
R19223:19225 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19214:19220 Coq.ZArith.Zcomplements <> Zlength def
R19231:19237 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R19265:19266 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R19282:19283 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R19297:19300 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R19238:19241 VST.floyd.canon <> temp constr
R19247:19250 compcert.common.Values <> Vint constr
R19253:19260 compcert.lib.Integers Int repr def
R19262:19262 VC.Verif_strlib <> i var
R19243:19244 VC.strlib <> _i def
R19267:19270 VST.floyd.canon <> temp constr
R19272:19276 VC.strlib <> _dest def
R19284:19287 VST.floyd.canon <> temp constr
R19289:19292 VC.strlib <> _src def
R19301:19305 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R19417:19425 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R19504:19504 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R19306:19312 VST.floyd.field_at <> data_at def
R19370:19373 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19345:19347 Coq.Lists.List <> map def
R19356:19362 VST.floyd.sublist <> sublist def
R19366:19366 VC.Verif_strlib <> i var
R19349:19353 VST.floyd.functional_base <> Vbyte def
R19374:19384 compcert.lib.Coqlib <> list_repeat def
R19405:19410 compcert.common.Values <> Vundef constr
R19387:19394 Coq.ZArith.BinInt Z to_nat def
R19398:19400 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R19401:19401 VC.Verif_strlib <> i var
R19319:19324 compcert.exportclight.Clightdefs <> tarray def
R19326:19331 compcert.exportclight.Clightdefs <> tschar def
R19426:19432 VST.floyd.field_at <> data_at def
R19471:19473 Coq.Lists.List <> map def
R19483:19486 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19487:19487 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R19497:19497 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R19488:19496 compcert.lib.Integers Byte zero def
R19475:19479 VST.floyd.functional_base <> Vbyte def
R19439:19444 compcert.exportclight.Clightdefs <> tarray def
R19463:19465 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R19454:19460 Coq.ZArith.Zcomplements <> Zlength def
R19446:19451 compcert.exportclight.Clightdefs <> tschar def
R19194:19194 Coq.Numbers.BinNums <> Z ind
def 20169:20188 <> stringlit_1_contents
R20199:20202 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20193:20198 VC.Verif_strlib <> Hello' def
R20203:20203 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R20213:20213 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R20204:20212 compcert.lib.Integers Byte zero def
def 20228:20251 <> example_call_strcpy_spec
R20257:20264 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R20285:20287 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R20265:20284 VC.strlib <> _example_call_strcpy def
R20288:20292 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R20295:20296 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R20304:20319 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R20414:20423 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R20435:20441 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R20424:20427 compcert.exportclight.Clightdefs <> tptr def
R20429:20434 compcert.exportclight.Clightdefs <> tschar def
R20297:20303 VST.veric.SeparationLogic <> globals def
R20320:20331 VST.floyd.canon <> :::'PROP'_'()'_x not
R20332:20338 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20347:20352 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20339:20343 VST.floyd.canon <> gvars constr
R20345:20346 VC.Verif_strlib <> gv var
R20353:20357 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R20413:20413 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R20358:20364 VST.floyd.entailer <> cstring def
R20395:20396 VC.Verif_strlib <> gv var
R20398:20411 VC.strlib <> ___stringlit_1 def
R20377:20380 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20371:20376 VC.Verif_strlib <> Hello' def
R20381:20381 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R20391:20391 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R20382:20390 compcert.lib.Integers Byte zero def
R20366:20368 VST.veric.shares <> Ews def
R20442:20453 VST.floyd.canon <> :::'PROP'_'()'_x not
R20454:20460 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20529:20534 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20461:20464 VST.floyd.canon <> temp constr
R20476:20479 compcert.common.Values <> Vint constr
R20482:20489 compcert.lib.Integers Int repr def
R20492:20497 Coq.ZArith.BinInt Z of_N def
R20500:20515 Coq.Strings.Ascii <> N_of_ascii def
R20466:20473 VST.veric.SeparationLogic <> ret_temp def
R20535:20539 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R20595:20595 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R20540:20546 VST.floyd.entailer <> cstring def
R20577:20578 VC.Verif_strlib <> gv var
R20580:20593 VC.strlib <> ___stringlit_1 def
R20559:20562 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20553:20558 VC.Verif_strlib <> Hello' def
R20563:20563 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R20573:20573 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R20564:20572 compcert.lib.Integers Byte zero def
R20548:20550 VST.veric.shares <> Ews def
prf 20605:20628 <> body_example_call_strcpy
R20631:20640 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R20676:20699 VC.Verif_strlib <> example_call_strcpy_spec def
R20654:20674 VC.strlib <> f_example_call_strcpy def
R20648:20652 VC.Verif_strlib <> Gprog def
R20642:20646 VC.Verif_strlib <> Vprog def
prf 21263:21273 <> body_strcmp
R21276:21285 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R21308:21318 VC.Verif_strlib <> strcmp_spec def
R21299:21306 VC.strlib <> f_strcmp def
R21293:21297 VC.Verif_strlib <> Gprog def
R21287:21291 VC.Verif_strlib <> Vprog def
