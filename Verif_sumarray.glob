DIGEST 65ae54eca5f9fbf0ee1b0179be315c3c
FVC.Verif_sumarray
R2340:2358 VST.floyd.proofauto <> <> lib
R2376:2386 VC.sumarray <> <> lib
inst 2398:2406 <> CompSpecs
R2410:2418 VST.veric.mpred <> compspecs class
R2436:2439 VC.sumarray <> prog def
def 2462:2466 <> Vprog
R2470:2477 VST.veric.mpred <> varspecs def
R2493:2496 VC.sumarray <> prog def
def 3122:3126 <> sum_Z
R3136:3139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3140:3140 Coq.Numbers.BinNums <> Z ind
R3130:3133 Coq.Init.Datatypes <> list ind
R3135:3135 Coq.Numbers.BinNums <> Z ind
R3145:3154 Coq.Lists.List <> fold_right def
R3156:3160 Coq.ZArith.BinInt Z add def
prf 3288:3296 <> sum_Z_app
R3325:3328 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3313:3317 VC.Verif_sumarray <> sum_Z def
R3321:3322 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3320:3320 VC.Verif_sumarray <> a var
R3323:3323 VC.Verif_sumarray <> b var
R3336:3338 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R3329:3333 VC.Verif_sumarray <> sum_Z def
R3335:3335 VC.Verif_sumarray <> a var
R3339:3343 VC.Verif_sumarray <> sum_Z def
R3345:3345 VC.Verif_sumarray <> b var
def 4401:4413 <> sumarray_spec
R4422:4424 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4417:4421 compcert.common.AST <> ident def
R4425:4431 VST.veric.mpred <> funspec ind
R4437:4444 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R4454:4456 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R4445:4453 VC.sumarray <> _sumarray def
R4457:4461 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4463:4464 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4468:4469 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4472:4474 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4480:4481 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4490:4492 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4499:4500 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4505:4506 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4508:4516 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4535:4536 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4547:4555 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4816:4825 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4831:4839 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R4519:4523 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R4534:4534 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R4517:4518 VC.sumarray <> _a def
R4524:4527 compcert.exportclight.Clightdefs <> tptr def
R4529:4533 compcert.exportclight.Clightdefs <> tuint def
R4539:4542 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R4537:4538 VC.sumarray <> _n def
R4543:4546 compcert.exportclight.Clightdefs <> tint def
R4826:4830 compcert.exportclight.Clightdefs <> tuint def
R4465:4467 compcert.common.Values <> val ind
R4475:4479 VST.msl.shares <> share def
R4493:4496 Coq.Init.Datatypes <> list ind
R4498:4498 Coq.Numbers.BinNums <> Z ind
R4507:4507 Coq.Numbers.BinNums <> Z ind
R4556:4562 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4580:4581 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4609:4623 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4677:4684 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R4563:4576 VST.veric.shares <> readable_share def
R4578:4579 VC.Verif_sumarray <> sh var
R4583:4586 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R4591:4594 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R4587:4590 VC.Verif_sumarray <> size var
R4587:4590 VC.Verif_sumarray <> size var
R4595:4608 compcert.lib.Integers Int max_signed def
R4624:4629 Coq.Lists.List <> Forall ind
R4669:4676 VC.Verif_sumarray <> contents var
R4642:4645 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R4647:4650 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R4646:4646 VC.Verif_sumarray <> x var
R4646:4646 VC.Verif_sumarray <> x var
R4651:4666 compcert.lib.Integers Int max_unsigned def
R4685:4691 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R4701:4702 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R4733:4740 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R4692:4695 VST.floyd.canon <> temp constr
R4700:4700 VC.Verif_sumarray <> a var
R4697:4698 VC.sumarray <> _a def
R4703:4706 VST.floyd.canon <> temp constr
R4712:4715 compcert.common.Values <> Vint constr
R4718:4725 compcert.lib.Integers Int repr def
R4727:4730 VC.Verif_sumarray <> size var
R4708:4709 VC.sumarray <> _n def
R4741:4747 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R4815:4815 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R4748:4754 VST.floyd.field_at <> data_at def
R4814:4814 VC.Verif_sumarray <> a var
R4780:4782 Coq.Lists.List <> map def
R4790:4792 Coq.Lists.List <> map def
R4803:4810 VC.Verif_sumarray <> contents var
R4794:4801 compcert.lib.Integers Int repr def
R4784:4787 compcert.common.Values <> Vint constr
R4760:4765 compcert.exportclight.Clightdefs <> tarray def
R4773:4776 VC.Verif_sumarray <> size var
R4767:4771 compcert.exportclight.Clightdefs <> tuint def
R4756:4757 VC.Verif_sumarray <> sh var
R4840:4847 VST.floyd.canon <> :::'PROP'_'()'_x not
R4848:4853 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R4903:4910 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R4854:4857 VST.floyd.canon <> temp constr
R4870:4873 compcert.common.Values <> Vint constr
R4876:4883 compcert.lib.Integers Int repr def
R4886:4890 VC.Verif_sumarray <> sum_Z def
R4892:4899 VC.Verif_sumarray <> contents var
R4859:4866 VST.veric.SeparationLogic <> ret_temp def
R4911:4915 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R4983:4983 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R4916:4922 VST.floyd.field_at <> data_at def
R4982:4982 VC.Verif_sumarray <> a var
R4948:4950 Coq.Lists.List <> map def
R4958:4960 Coq.Lists.List <> map def
R4971:4978 VC.Verif_sumarray <> contents var
R4962:4969 compcert.lib.Integers Int repr def
R4952:4955 compcert.common.Values <> Vint constr
R4928:4933 compcert.exportclight.Clightdefs <> tarray def
R4941:4944 VC.Verif_sumarray <> size var
R4935:4939 compcert.exportclight.Clightdefs <> tuint def
R4924:4925 VC.Verif_sumarray <> sh var
R6943:6945 compcert.common.Values <> val ind
def 9131:9139 <> main_spec
R9145:9152 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R9158:9160 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R9153:9157 VC.sumarray <> _main def
R9161:9165 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R9168:9170 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R9178:9188 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R9209:9218 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R9223:9232 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R9219:9222 compcert.exportclight.Clightdefs <> tint def
R9171:9177 VST.veric.SeparationLogic <> globals def
R9189:9196 VST.veric.SeparationLogic <> main_pre def
R9207:9208 VC.Verif_sumarray <> gv var
R9203:9205 Coq.Init.Datatypes <> nil constr
R9198:9201 VC.sumarray <> prog def
R9233:9245 VST.floyd.canon <> :::'PROP'_'()'_x not
R9246:9252 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9294:9301 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9253:9256 VST.floyd.canon <> temp constr
R9268:9271 compcert.common.Values <> Vint constr
R9274:9281 compcert.lib.Integers Int repr def
R9289:9289 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9287:9287 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9285:9285 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9258:9265 VST.veric.SeparationLogic <> ret_temp def
R9302:9305 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9308:9308 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9306:9307 VST.msl.seplog <> TT meth
def 11171:11175 <> Gprog
R11204:11204 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R11218:11219 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R11229:11229 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R11205:11217 VC.Verif_sumarray <> sumarray_spec def
R11220:11228 VC.Verif_sumarray <> main_spec def
R11199:11202 VC.sumarray <> prog def
R11204:11204 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R11218:11219 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R11229:11229 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R11205:11217 VC.Verif_sumarray <> sumarray_spec def
R11220:11228 VC.Verif_sumarray <> main_spec def
R11544:11548 VC.Verif_sumarray <> Gprog def
R11898:11902 VC.Verif_sumarray <> Vprog def
R11959:11966 VST.veric.mpred <> varspecs def
prf 12377:12389 <> body_sumarray
R12392:12401 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R12426:12438 VC.Verif_sumarray <> sumarray_spec def
R12415:12424 VC.sumarray <> f_sumarray def
R12409:12413 VC.Verif_sumarray <> Gprog def
R12403:12407 VC.Verif_sumarray <> Vprog def
R15552:15559 compcert.lib.Integers Int repr def
R15623:15626 compcert.common.Values <> Vint constr
R15629:15636 compcert.lib.Integers Int repr def
R15694:15697 VST.floyd.canon <> temp constr
R15703:15706 compcert.common.Values <> Vint constr
R15709:15716 compcert.lib.Integers Int repr def
R15699:15700 VC.sumarray <> _i def
R16189:16198 VST.floyd.client_lemmas <> abbreviate def
R16241:16250 VST.floyd.client_lemmas <> abbreviate def
R16509:16518 VST.floyd.client_lemmas <> abbreviate def
R16590:16599 VST.floyd.client_lemmas <> abbreviate def
R16664:16673 VST.floyd.client_lemmas <> abbreviate def
R17982:17984 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R17986:17987 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R17989:17993 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R17994:18000 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R18015:18019 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R18002:18005 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R18007:18010 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R18006:18006 VC.Verif_sumarray <> i var
R18006:18006 VC.Verif_sumarray <> i var
R18020:18026 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R18036:18047 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R18075:18086 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R18117:18128 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R18185:18189 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R18027:18030 VST.floyd.canon <> temp constr
R18032:18033 VC.sumarray <> _a def
R18048:18051 VST.floyd.canon <> temp constr
R18057:18060 compcert.common.Values <> Vint constr
R18063:18070 compcert.lib.Integers Int repr def
R18072:18072 VC.Verif_sumarray <> i var
R18053:18054 VC.sumarray <> _i def
R18087:18090 VST.floyd.canon <> temp constr
R18096:18099 compcert.common.Values <> Vint constr
R18102:18109 compcert.lib.Integers Int repr def
R18092:18093 VC.sumarray <> _n def
R18129:18132 VST.floyd.canon <> temp constr
R18138:18141 compcert.common.Values <> Vint constr
R18144:18151 compcert.lib.Integers Int repr def
R18154:18158 VC.Verif_sumarray <> sum_Z def
R18161:18167 VST.floyd.sublist <> sublist def
R18171:18171 VC.Verif_sumarray <> i var
R18134:18135 VC.sumarray <> _s def
R18190:18196 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R18264:18264 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R18197:18203 VST.floyd.field_at <> data_at def
R18229:18231 Coq.Lists.List <> map def
R18239:18241 Coq.Lists.List <> map def
R18243:18250 compcert.lib.Integers Int repr def
R18233:18236 compcert.common.Values <> Vint constr
R18209:18214 compcert.exportclight.Clightdefs <> tarray def
R18216:18220 compcert.exportclight.Clightdefs <> tuint def
R17988:17988 Coq.Numbers.BinNums <> Z ind
R17982:17984 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R17986:17987 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R17989:17993 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R17994:18000 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R18015:18019 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R18002:18005 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R18007:18010 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R18006:18006 VC.Verif_sumarray <> i var
R18006:18006 VC.Verif_sumarray <> i var
R18020:18026 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R18036:18047 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R18075:18086 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R18117:18128 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R18185:18189 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R18027:18030 VST.floyd.canon <> temp constr
R18032:18033 VC.sumarray <> _a def
R18048:18051 VST.floyd.canon <> temp constr
R18057:18060 compcert.common.Values <> Vint constr
R18063:18070 compcert.lib.Integers Int repr def
R18072:18072 VC.Verif_sumarray <> i var
R18053:18054 VC.sumarray <> _i def
R18087:18090 VST.floyd.canon <> temp constr
R18096:18099 compcert.common.Values <> Vint constr
R18102:18109 compcert.lib.Integers Int repr def
R18092:18093 VC.sumarray <> _n def
R18129:18132 VST.floyd.canon <> temp constr
R18138:18141 compcert.common.Values <> Vint constr
R18144:18151 compcert.lib.Integers Int repr def
R18154:18158 VC.Verif_sumarray <> sum_Z def
R18161:18167 VST.floyd.sublist <> sublist def
R18171:18171 VC.Verif_sumarray <> i var
R18134:18135 VC.sumarray <> _s def
R18190:18196 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R18264:18264 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R18197:18203 VST.floyd.field_at <> data_at def
R18229:18231 Coq.Lists.List <> map def
R18239:18241 Coq.Lists.List <> map def
R18243:18250 compcert.lib.Integers Int repr def
R18233:18236 compcert.common.Values <> Vint constr
R18209:18214 compcert.exportclight.Clightdefs <> tarray def
R18216:18220 compcert.exportclight.Clightdefs <> tuint def
R17988:17988 Coq.Numbers.BinNums <> Z ind
R19572:19573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19574:19574 Coq.Numbers.BinNums <> Z ind
R19571:19571 Coq.Numbers.BinNums <> Z ind
R19581:19581 Coq.Numbers.BinNums <> Z ind
R19591:19594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19595:19601 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R19605:19606 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R19604:19604 Coq.Numbers.BinNums <> Z ind
R19611:19611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19607:19607 VC.Verif_sumarray <> f var
R19609:19609 VC.Verif_sumarray <> x var
R19612:19612 VC.Verif_sumarray <> i var
R19589:19589 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19585:19585 VC.Verif_sumarray <> f var
R19587:19587 VC.Verif_sumarray <> x var
R22864:22866 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22848:22854 Coq.ZArith.Zcomplements <> Zlength def
R22864:22866 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22848:22854 Coq.ZArith.Zcomplements <> Zlength def
R23998:24008 VST.floyd.sublist <> Zlength_map thm
R23998:24008 VST.floyd.sublist <> Zlength_map thm
R23998:24008 VST.floyd.sublist <> Zlength_map thm
R23998:24008 VST.floyd.sublist <> Zlength_map thm
R23998:24008 VST.floyd.sublist <> Zlength_map thm
R24550:24550 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R24550:24550 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R25042:25054 VST.floyd.sublist <> sublist_split thm
R25062:25062 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R25042:25054 VST.floyd.sublist <> sublist_split thm
R25062:25062 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R25042:25054 VST.floyd.sublist <> sublist_split thm
R25062:25062 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R25086:25094 VC.Verif_sumarray <> sum_Z_app thm
R25086:25094 VC.Verif_sumarray <> sum_Z_app thm
R25086:25094 VC.Verif_sumarray <> sum_Z_app thm
R25106:25116 VST.floyd.sublist <> sublist_one thm
R25106:25116 VST.floyd.sublist <> sublist_one thm
R25106:25116 VST.floyd.sublist <> sublist_one thm
def 26043:26055 <> four_contents
R26060:26060 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R26062:26063 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R26065:26066 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R26068:26069 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R26071:26071 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 26081:26089 <> body_main
R26093:26102 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R26123:26131 VC.Verif_sumarray <> main_spec def
R26116:26121 VC.sumarray <> f_main def
R26110:26114 VC.Verif_sumarray <> Gprog def
R26104:26108 VC.Verif_sumarray <> Vprog def
R27591:27591 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27600:27601 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27605:27606 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27620:27621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27623:27623 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27595:27599 VC.sumarray <> _four def
R27602:27604 VST.veric.shares <> Ews def
R27607:27619 VC.Verif_sumarray <> four_contents def
R27591:27591 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27600:27601 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27605:27606 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27620:27621 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27623:27623 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27595:27599 VC.sumarray <> _four def
R27602:27604 VST.veric.shares <> Ews def
R27607:27619 VC.Verif_sumarray <> four_contents def
prf 28963:28974 <> prog_correct
R28977:28986 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_prog def
R28999:29003 VC.Verif_sumarray <> Gprog def
R28993:28997 VC.Verif_sumarray <> Vprog def
R28988:28991 VC.sumarray <> prog def
R29426:29438 VC.Verif_sumarray <> body_sumarray thm
R29457:29465 VC.Verif_sumarray <> body_main thm
