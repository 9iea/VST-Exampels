DIGEST 01de89d9e550cdafe35e89944b4bb2ff
FVC.Verif_append1
R791:809 VST.floyd.proofauto <> <> lib
R827:835 VC.append <> <> lib
inst 847:855 <> CompSpecs
R859:867 VST.veric.mpred <> compspecs class
R885:888 VC.append <> prog def
def 911:915 <> Vprog
R919:926 VST.veric.mpred <> varspecs def
R941:944 VC.append <> prog def
def 1157:1162 <> t_list
R1167:1173 compcert.cfrontend.Ctypes <> Tstruct constr
R1181:1186 compcert.cfrontend.Ctypes <> noattr def
R1175:1179 VC.append <> _list def
def 1199:1205 <> listrep
R1215:1218 Coq.Init.Datatypes <> list ind
R1220:1222 compcert.common.Values <> val ind
R1229:1231 compcert.common.Values <> val ind
R1236:1240 VST.veric.mpred <> mpred def
R1252:1256 VC.Verif_append1 <> sigma var
R1267:1268 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1280:1282 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R1284:1284 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R1288:1296 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R1323:1327 VST.msl.seplog <> ::logic:x_'*'_x not
R1297:1303 VST.floyd.field_at <> data_at def
R1322:1322 VC.Verif_append1 <> p var
R1316:1316 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1318:1318 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1320:1320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1319:1319 VC.Verif_append1 <> y var
R1309:1314 VC.Verif_append1 <> t_list def
R1305:1307 VST.veric.shares <> Tsh def
R1328:1334 VC.Verif_append1 <> listrep def
R1339:1339 VC.Verif_append1 <> y var
R1285:1287 compcert.common.Values <> val ind
R1344:1346 Coq.Init.Datatypes <> nil constr
R1372:1375 VST.msl.seplog <> ::logic:x_'&&'_x not
R1356:1359 VST.msl.seplog <> ::logic:'!!'_x not
R1371:1371 VST.msl.seplog <> ::logic:'!!'_x not
R1361:1363 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1360:1360 VC.Verif_append1 <> p var
R1364:1370 VST.veric.base <> nullval def
R1376:1378 VST.msl.seplog <> emp meth
R1397:1403 VC.Verif_append1 <> listrep def
def 1512:1522 <> append_spec
R1528:1535 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R1543:1545 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R1536:1542 VC.append <> _append def
R1546:1550 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1552:1553 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1557:1558 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1560:1561 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1565:1566 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1569:1570 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1579:1580 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1583:1584 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1593:1601 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1621:1623 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1643:1649 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1728:1737 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1749:1755 VST.floyd.client_lemmas <> :::'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R1604:1608 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R1620:1620 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R1602:1603 VC.append <> _x def
R1609:1612 compcert.exportclight.Clightdefs <> tptr def
R1614:1619 VC.Verif_append1 <> t_list def
R1626:1630 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R1642:1642 VST.floyd.client_lemmas <> ::formals:x_'OF'_x not
R1624:1625 VC.append <> _y def
R1631:1634 compcert.exportclight.Clightdefs <> tptr def
R1636:1641 VC.Verif_append1 <> t_list def
R1738:1741 compcert.exportclight.Clightdefs <> tptr def
R1743:1748 VC.Verif_append1 <> t_list def
R1554:1556 compcert.common.Values <> val ind
R1562:1564 compcert.common.Values <> val ind
R1571:1574 Coq.Init.Datatypes <> list ind
R1576:1578 compcert.common.Values <> val ind
R1585:1588 Coq.Init.Datatypes <> list ind
R1590:1592 compcert.common.Values <> val ind
R1650:1661 VST.floyd.canon <> :::'PROP'_'()'_x not
R1662:1668 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R1678:1679 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R1689:1695 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R1669:1672 VST.floyd.canon <> temp constr
R1677:1677 VC.Verif_append1 <> x var
R1674:1675 VC.append <> _x def
R1680:1683 VST.floyd.canon <> temp constr
R1688:1688 VC.Verif_append1 <> y var
R1685:1686 VC.append <> _y def
R1696:1700 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1713:1714 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1727:1727 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1701:1707 VC.Verif_append1 <> listrep def
R1712:1712 VC.Verif_append1 <> x var
R1709:1710 VC.Verif_append1 <> s1 var
R1715:1721 VC.Verif_append1 <> listrep def
R1726:1726 VC.Verif_append1 <> y var
R1723:1724 VC.Verif_append1 <> s2 var
R1756:1758 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R1760:1761 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R1765:1771 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R1762:1764 compcert.common.Values <> val ind
R1772:1783 VST.floyd.canon <> :::'PROP'_'()'_x not
R1784:1789 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R1805:1811 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R1790:1793 VST.floyd.canon <> temp constr
R1804:1804 VC.Verif_append1 <> r var
R1795:1802 VST.veric.SeparationLogic <> ret_temp def
R1812:1816 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1835:1835 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R1817:1823 VC.Verif_append1 <> listrep def
R1834:1834 VC.Verif_append1 <> r var
R1828:1829 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1826:1827 VC.Verif_append1 <> s1 var
R1830:1831 VC.Verif_append1 <> s2 var
R1762:1764 compcert.common.Values <> val ind
def 1850:1854 <> Gprog
R1858:1865 VST.veric.mpred <> funspecs def
R1903:1904 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1916:1917 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1905:1915 VC.Verif_append1 <> append_spec def
R1898:1901 VC.append <> prog def
R1903:1904 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1916:1917 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1905:1915 VC.Verif_append1 <> append_spec def
def 3245:3248 <> lseg
R3261:3264 Coq.Init.Datatypes <> list ind
R3266:3268 compcert.common.Values <> val ind
R3277:3279 compcert.common.Values <> val ind
R3284:3288 VST.veric.mpred <> mpred def
R3301:3308 VC.Verif_append1 <> contents var
R3319:3321 Coq.Init.Datatypes <> nil constr
R3336:3339 VST.msl.seplog <> ::logic:x_'&&'_x not
R3326:3329 VST.msl.seplog <> ::logic:'!!'_x not
R3335:3335 VST.msl.seplog <> ::logic:'!!'_x not
R3331:3333 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3330:3330 VC.Verif_append1 <> x var
R3334:3334 VC.Verif_append1 <> z var
R3340:3342 VST.msl.seplog <> emp meth
R3349:3350 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3357:3359 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R3361:3361 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R3365:3366 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R3394:3396 VST.msl.seplog <> ::logic:x_'*'_x not
R3367:3373 VST.floyd.field_at <> data_at def
R3393:3393 VC.Verif_append1 <> x var
R3386:3386 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3388:3389 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3391:3391 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3390:3390 VC.Verif_append1 <> y var
R3379:3384 VC.Verif_append1 <> t_list def
R3375:3377 VST.veric.shares <> Tsh def
R3397:3400 VC.Verif_append1 <> lseg def
R3407:3407 VC.Verif_append1 <> z var
R3405:3405 VC.Verif_append1 <> y var
R3362:3364 compcert.common.Values <> val ind
R3427:3430 VC.Verif_append1 <> lseg def
prf 3587:3600 <> singleton_lseg
R3614:3616 compcert.common.Values <> val ind
R3625:3627 compcert.common.Values <> val ind
R3660:3664 VST.msl.seplog <> :::x_'|--'_x not
R3633:3639 VST.floyd.field_at <> data_at def
R3659:3659 VC.Verif_append1 <> x var
R3652:3652 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3654:3655 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3657:3657 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3653:3653 VC.Verif_append1 <> a var
R3656:3656 VC.Verif_append1 <> y var
R3645:3650 VC.Verif_append1 <> t_list def
R3641:3643 VST.veric.shares <> Tsh def
R3665:3668 VC.Verif_append1 <> lseg def
R3676:3676 VC.Verif_append1 <> y var
R3674:3674 VC.Verif_append1 <> x var
R3670:3670 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R3672:3672 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R3671:3671 VC.Verif_append1 <> a var
prf 4206:4220 <> lseg_maybe_loop
R4240:4242 compcert.common.Values <> val ind
R4305:4309 VST.msl.seplog <> :::x_'|--'_x not
R4275:4277 VST.msl.seplog <> ::logic:x_'*'_x not
R4248:4254 VST.floyd.field_at <> data_at def
R4274:4274 VC.Verif_append1 <> x var
R4267:4267 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4269:4270 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4272:4272 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4268:4268 VC.Verif_append1 <> a var
R4271:4271 VC.Verif_append1 <> y var
R4260:4265 VC.Verif_append1 <> t_list def
R4256:4258 VST.veric.shares <> Tsh def
R4278:4284 VST.floyd.field_at <> data_at def
R4304:4304 VC.Verif_append1 <> y var
R4297:4297 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4299:4300 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4302:4302 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4298:4298 VC.Verif_append1 <> b var
R4301:4301 VC.Verif_append1 <> y var
R4290:4295 VC.Verif_append1 <> t_list def
R4286:4288 VST.veric.shares <> Tsh def
R4310:4313 VC.Verif_append1 <> lseg def
R4324:4324 VC.Verif_append1 <> y var
R4322:4322 VC.Verif_append1 <> x var
R4315:4315 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R4317:4318 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R4320:4320 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R4316:4316 VC.Verif_append1 <> a var
R4319:4319 VC.Verif_append1 <> b var
R4353:4356 VC.Verif_append1 <> lseg def
prf 4795:4812 <> loopy_lseg_not_bad
R4834:4836 compcert.common.Values <> val ind
R4915:4919 VST.msl.seplog <> :::x_'|--'_x not
R4899:4901 VST.msl.seplog <> ::logic:x_'*'_x not
R4869:4871 VST.msl.seplog <> ::logic:x_'*'_x not
R4842:4848 VST.floyd.field_at <> data_at def
R4868:4868 VC.Verif_append1 <> x var
R4861:4861 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4863:4864 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4866:4866 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4862:4862 VC.Verif_append1 <> a var
R4865:4865 VC.Verif_append1 <> y var
R4854:4859 VC.Verif_append1 <> t_list def
R4850:4852 VST.veric.shares <> Tsh def
R4872:4878 VST.floyd.field_at <> data_at def
R4898:4898 VC.Verif_append1 <> y var
R4891:4891 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4893:4894 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4896:4896 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4892:4892 VC.Verif_append1 <> b var
R4895:4895 VC.Verif_append1 <> y var
R4884:4889 VC.Verif_append1 <> t_list def
R4880:4882 VST.veric.shares <> Tsh def
R4902:4908 VC.Verif_append1 <> listrep def
R4914:4914 VC.Verif_append1 <> y var
R4910:4910 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R4912:4912 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R4911:4911 VC.Verif_append1 <> c var
R4920:4921 VST.msl.seplog <> FF meth
R4950:4956 VC.Verif_append1 <> listrep def
R4987:5002 VST.floyd.field_at <> data_at_conflict thm
R5015:5015 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5017:5018 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5026:5026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5019:5025 VST.veric.base <> nullval def
R5008:5013 VC.Verif_append1 <> t_list def
R5004:5006 VST.veric.shares <> Tsh def
R5044:5059 VST.floyd.field_at <> data_at_conflict thm
R5072:5072 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5074:5075 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5083:5083 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5076:5082 VST.veric.base <> nullval def
R5065:5070 VC.Verif_append1 <> t_list def
R5061:5063 VST.veric.shares <> Tsh def
R5044:5059 VST.floyd.field_at <> data_at_conflict thm
R5072:5072 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5074:5075 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5083:5083 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5076:5082 VST.veric.base <> nullval def
R5065:5070 VC.Verif_append1 <> t_list def
R5061:5063 VST.veric.shares <> Tsh def
prf 5450:5458 <> lseg_lseg
R5476:5479 Coq.Init.Datatypes <> list ind
R5481:5483 compcert.common.Values <> val ind
R5494:5496 compcert.common.Values <> val ind
R5527:5531 VST.msl.seplog <> :::x_'|--'_x not
R5513:5515 VST.msl.seplog <> ::logic:x_'*'_x not
R5502:5505 VC.Verif_append1 <> lseg def
R5512:5512 VC.Verif_append1 <> y var
R5510:5510 VC.Verif_append1 <> x var
R5507:5508 VC.Verif_append1 <> s1 var
R5516:5519 VC.Verif_append1 <> lseg def
R5526:5526 VC.Verif_append1 <> z var
R5524:5524 VC.Verif_append1 <> y var
R5521:5522 VC.Verif_append1 <> s2 var
R5532:5535 VC.Verif_append1 <> lseg def
R5550:5550 VC.Verif_append1 <> z var
R5548:5548 VC.Verif_append1 <> x var
R5540:5543 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5538:5539 VC.Verif_append1 <> s1 var
R5544:5545 VC.Verif_append1 <> s2 var
prf 5658:5666 <> lseg_list
R5684:5687 Coq.Init.Datatypes <> list ind
R5689:5691 compcert.common.Values <> val ind
R5700:5702 compcert.common.Values <> val ind
R5734:5738 VST.msl.seplog <> :::x_'|--'_x not
R5719:5721 VST.msl.seplog <> ::logic:x_'*'_x not
R5708:5711 VC.Verif_append1 <> lseg def
R5718:5718 VC.Verif_append1 <> y var
R5716:5716 VC.Verif_append1 <> x var
R5713:5714 VC.Verif_append1 <> s1 var
R5722:5728 VC.Verif_append1 <> listrep def
R5733:5733 VC.Verif_append1 <> y var
R5730:5731 VC.Verif_append1 <> s2 var
R5739:5745 VC.Verif_append1 <> listrep def
R5758:5758 VC.Verif_append1 <> x var
R5750:5753 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5748:5749 VC.Verif_append1 <> s1 var
R5754:5755 VC.Verif_append1 <> s2 var
prf 6320:6338 <> listrep_local_facts
R6377:6384 VST.msl.seplog <> :::x_'|--'_x not
R6362:6368 VC.Verif_append1 <> listrep def
R6376:6376 VC.Verif_append1 <> p var
R6370:6374 VC.Verif_append1 <> sigma var
R6385:6388 VST.msl.seplog <> ::logic:'!!'_x not
R6438:6438 VST.msl.seplog <> ::logic:'!!'_x not
R6409:6413 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6437:6437 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6389:6406 VST.veric.val_lemmas <> is_pointer_or_null def
R6408:6408 VC.Verif_append1 <> p var
R6423:6427 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6415:6415 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6414:6414 VC.Verif_append1 <> p var
R6416:6422 VST.veric.base <> nullval def
R6433:6433 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6428:6432 VC.Verif_append1 <> sigma var
R6434:6436 Coq.Init.Datatypes <> nil constr
prf 6535:6555 <> listrep_valid_pointer
R6594:6598 VST.msl.seplog <> :::x_'|--'_x not
R6579:6585 VC.Verif_append1 <> listrep def
R6593:6593 VC.Verif_append1 <> p var
R6587:6591 VC.Verif_append1 <> sigma var
R6599:6611 VST.veric.expr <> valid_pointer def
R6613:6613 VC.Verif_append1 <> p var
prf 7256:7267 <> listrep_null
R7302:7307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7326:7328 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7308:7314 VC.Verif_append1 <> listrep def
R7325:7325 VC.Verif_append1 <> x var
R7316:7323 VC.Verif_append1 <> contents var
R7346:7349 VST.msl.seplog <> ::logic:x_'&&'_x not
R7329:7332 VST.msl.seplog <> ::logic:'!!'_x not
R7345:7345 VST.msl.seplog <> ::logic:'!!'_x not
R7341:7341 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7333:7340 VC.Verif_append1 <> contents var
R7342:7344 Coq.Init.Datatypes <> nil constr
R7350:7352 VST.msl.seplog <> emp meth
R7292:7294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7291:7291 VC.Verif_append1 <> x var
R7295:7301 VST.veric.base <> nullval def
prf 7592:7606 <> listrep_nonnull
R7642:7647 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7666:7672 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7648:7654 VC.Verif_append1 <> listrep def
R7665:7665 VC.Verif_append1 <> x var
R7656:7663 VC.Verif_append1 <> contents var
R7673:7675 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R7677:7678 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R7682:7683 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R7684:7686 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R7689:7690 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R7699:7700 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R7701:7703 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R7705:7705 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R7709:7716 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R7771:7773 VST.msl.seplog <> ::logic:x_'*'_x not
R7740:7743 VST.msl.seplog <> ::logic:x_'&&'_x not
R7717:7720 VST.msl.seplog <> ::logic:'!!'_x not
R7739:7739 VST.msl.seplog <> ::logic:'!!'_x not
R7729:7731 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7721:7728 VC.Verif_append1 <> contents var
R7733:7736 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7732:7732 VC.Verif_append1 <> h var
R7737:7738 VC.Verif_append1 <> hs var
R7744:7750 VST.floyd.field_at <> data_at def
R7770:7770 VC.Verif_append1 <> x var
R7763:7763 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7765:7766 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7768:7768 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7764:7764 VC.Verif_append1 <> h var
R7767:7767 VC.Verif_append1 <> y var
R7756:7761 VC.Verif_append1 <> t_list def
R7752:7754 VST.veric.shares <> Tsh def
R7774:7780 VC.Verif_append1 <> listrep def
R7785:7785 VC.Verif_append1 <> y var
R7782:7783 VC.Verif_append1 <> hs var
R7706:7708 compcert.common.Values <> val ind
R7691:7694 Coq.Init.Datatypes <> list ind
R7696:7698 compcert.common.Values <> val ind
R7679:7681 compcert.common.Values <> val ind
R7631:7634 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R7630:7630 VC.Verif_append1 <> x var
R7635:7641 VST.veric.base <> nullval def
prf 7999:8009 <> body_append
R8012:8021 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R8044:8054 VC.Verif_append1 <> append_spec def
R8035:8042 VC.append <> f_append def
R8029:8033 VC.Verif_append1 <> Gprog def
R8023:8027 VC.Verif_append1 <> Vprog def
R8370:8381 VC.Verif_append1 <> listrep_null prfax
R8370:8381 VC.Verif_append1 <> listrep_null prfax
R8370:8381 VC.Verif_append1 <> listrep_null prfax
R8536:8550 VC.Verif_append1 <> listrep_nonnull prfax
R8536:8550 VC.Verif_append1 <> listrep_nonnull prfax
R8536:8550 VC.Verif_append1 <> listrep_nonnull prfax
R8834:8836 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8840:8841 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8850:8851 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8842:8845 Coq.Init.Datatypes <> list ind
R8847:8849 compcert.common.Values <> val ind
R8852:8854 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8856:8857 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8861:8862 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8858:8860 compcert.common.Values <> val ind
R8863:8865 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8869:8870 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8879:8880 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8871:8874 Coq.Init.Datatypes <> list ind
R8876:8878 compcert.common.Values <> val ind
R8881:8883 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8885:8886 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8890:8891 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8887:8889 compcert.common.Values <> val ind
R8892:8894 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8896:8897 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8901:8914 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8898:8900 compcert.common.Values <> val ind
R8915:8920 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R8941:8954 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R8923:8925 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8929:8932 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R8926:8928 VC.Verif_append1 <> s1a var
R8934:8937 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8933:8933 VC.Verif_append1 <> b var
R8938:8940 VC.Verif_append1 <> s1c var
R8955:8961 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8971:8972 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8982:8983 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8993:8994 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9004:9017 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8962:8965 VST.floyd.canon <> temp constr
R8967:8968 VC.append <> _x def
R8973:8976 VST.floyd.canon <> temp constr
R8981:8981 VC.Verif_append1 <> t var
R8978:8979 VC.append <> _t def
R8984:8987 VST.floyd.canon <> temp constr
R8992:8992 VC.Verif_append1 <> u var
R8989:8990 VC.append <> _u def
R8995:8998 VST.floyd.canon <> temp constr
R9000:9001 VC.append <> _y def
R9018:9022 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9035:9053 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9081:9099 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9113:9131 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9144:9144 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9023:9026 VC.Verif_append1 <> lseg def
R9034:9034 VC.Verif_append1 <> t var
R9028:9030 VC.Verif_append1 <> s1a var
R9054:9060 VST.floyd.field_at <> data_at def
R9080:9080 VC.Verif_append1 <> t var
R9073:9073 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9075:9076 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9078:9078 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9074:9074 VC.Verif_append1 <> b var
R9077:9077 VC.Verif_append1 <> u var
R9066:9071 VC.Verif_append1 <> t_list def
R9062:9064 VST.veric.shares <> Tsh def
R9100:9106 VC.Verif_append1 <> listrep def
R9112:9112 VC.Verif_append1 <> u var
R9108:9110 VC.Verif_append1 <> s1c var
R9132:9138 VC.Verif_append1 <> listrep def
R8898:8900 compcert.common.Values <> val ind
R8887:8889 compcert.common.Values <> val ind
R8871:8874 Coq.Init.Datatypes <> list ind
R8876:8878 compcert.common.Values <> val ind
R8858:8860 compcert.common.Values <> val ind
R8842:8845 Coq.Init.Datatypes <> list ind
R8847:8849 compcert.common.Values <> val ind
R8834:8836 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8840:8841 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8850:8851 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8842:8845 Coq.Init.Datatypes <> list ind
R8847:8849 compcert.common.Values <> val ind
R8852:8854 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8856:8857 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8861:8862 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8858:8860 compcert.common.Values <> val ind
R8863:8865 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8869:8870 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8879:8880 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8871:8874 Coq.Init.Datatypes <> list ind
R8876:8878 compcert.common.Values <> val ind
R8881:8883 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8885:8886 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8890:8891 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8887:8889 compcert.common.Values <> val ind
R8892:8894 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8896:8897 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8901:8914 VST.floyd.canon <> ::assert:'EX'_x_':'_x_','_x not
R8898:8900 compcert.common.Values <> val ind
R8915:8920 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R8941:8954 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R8923:8925 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8929:8932 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R8926:8928 VC.Verif_append1 <> s1a var
R8934:8937 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8933:8933 VC.Verif_append1 <> b var
R8938:8940 VC.Verif_append1 <> s1c var
R8955:8961 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8971:8972 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8982:8983 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8993:8994 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R9004:9017 VST.floyd.canon <> :::'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R8962:8965 VST.floyd.canon <> temp constr
R8967:8968 VC.append <> _x def
R8973:8976 VST.floyd.canon <> temp constr
R8981:8981 VC.Verif_append1 <> t var
R8978:8979 VC.append <> _t def
R8984:8987 VST.floyd.canon <> temp constr
R8992:8992 VC.Verif_append1 <> u var
R8989:8990 VC.append <> _u def
R8995:8998 VST.floyd.canon <> temp constr
R9000:9001 VC.append <> _y def
R9018:9022 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9035:9053 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9081:9099 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9113:9131 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9144:9144 VST.floyd.canon <> :::'SEP'_'('_x_';'_'..'_';'_x_')' not
R9023:9026 VC.Verif_append1 <> lseg def
R9034:9034 VC.Verif_append1 <> t var
R9028:9030 VC.Verif_append1 <> s1a var
R9054:9060 VST.floyd.field_at <> data_at def
R9080:9080 VC.Verif_append1 <> t var
R9073:9073 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9075:9076 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9078:9078 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9074:9074 VC.Verif_append1 <> b var
R9077:9077 VC.Verif_append1 <> u var
R9066:9071 VC.Verif_append1 <> t_list def
R9062:9064 VST.veric.shares <> Tsh def
R9100:9106 VC.Verif_append1 <> listrep def
R9112:9112 VC.Verif_append1 <> u var
R9108:9110 VC.Verif_append1 <> s1c var
R9132:9138 VC.Verif_append1 <> listrep def
R8898:8900 compcert.common.Values <> val ind
R8887:8889 compcert.common.Values <> val ind
R8871:8874 Coq.Init.Datatypes <> list ind
R8876:8878 compcert.common.Values <> val ind
R8858:8860 compcert.common.Values <> val ind
R8842:8845 Coq.Init.Datatypes <> list ind
R8847:8849 compcert.common.Values <> val ind
R9220:9222 Coq.Init.Datatypes <> nil constr
R9224:9226 compcert.common.Values <> val ind
R9220:9222 Coq.Init.Datatypes <> nil constr
R9224:9226 compcert.common.Values <> val ind
R9272:9275 VC.Verif_append1 <> lseg def
R9581:9595 VC.Verif_append1 <> listrep_nonnull prfax
R9581:9595 VC.Verif_append1 <> listrep_nonnull prfax
R9581:9595 VC.Verif_append1 <> listrep_nonnull prfax
R11014:11015 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11031:11032 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11034:11034 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11038:11038 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11040:11040 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11042:11042 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11019:11022 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11024:11027 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11028:11030 Coq.Init.Datatypes <> nil constr
R11014:11015 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11031:11032 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11034:11034 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11038:11038 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11040:11040 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11042:11042 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11019:11022 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R11024:11027 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R11028:11030 Coq.Init.Datatypes <> nil constr
R11052:11054 Coq.Init.Datatypes <> fst def
R11057:11059 Coq.Init.Datatypes <> snd def
R11648:11659 VC.Verif_append1 <> listrep_null prfax
R11648:11659 VC.Verif_append1 <> listrep_null prfax
R11648:11659 VC.Verif_append1 <> listrep_null prfax
prf 12319:12330 <> lseg2listrep
R12363:12367 VST.msl.seplog <> :::x_'|--'_x not
R12347:12350 VC.Verif_append1 <> lseg def
R12356:12362 VST.veric.base <> nullval def
R12354:12354 VC.Verif_append1 <> x var
R12352:12352 VC.Verif_append1 <> s var
R12368:12374 VC.Verif_append1 <> listrep def
R12378:12378 VC.Verif_append1 <> x var
R12376:12376 VC.Verif_append1 <> s var
prf 12490:12501 <> listrep2lseg
R12529:12533 VST.msl.seplog <> :::x_'|--'_x not
R12518:12524 VC.Verif_append1 <> listrep def
R12528:12528 VC.Verif_append1 <> x var
R12526:12526 VC.Verif_append1 <> s var
R12534:12537 VC.Verif_append1 <> lseg def
R12543:12549 VST.veric.base <> nullval def
R12541:12541 VC.Verif_append1 <> x var
R12539:12539 VC.Verif_append1 <> s var
prf 12609:12626 <> lseg_listrep_equiv
R12659:12661 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12643:12646 VC.Verif_append1 <> lseg def
R12652:12658 VST.veric.base <> nullval def
R12650:12650 VC.Verif_append1 <> x var
R12648:12648 VC.Verif_append1 <> s var
R12662:12668 VC.Verif_append1 <> listrep def
R12672:12672 VC.Verif_append1 <> x var
R12670:12670 VC.Verif_append1 <> s var
R12700:12707 VST.msl.seplog <> pred_ext meth
R12700:12707 VST.msl.seplog <> pred_ext meth
R12720:12731 VC.Verif_append1 <> lseg2listrep prfax
R12720:12731 VC.Verif_append1 <> lseg2listrep prfax
R12744:12755 VC.Verif_append1 <> listrep2lseg prfax
R12744:12755 VC.Verif_append1 <> listrep2lseg prfax
prf 12828:12840 <> lseg_lseg_inv
R12882:12886 VST.msl.seplog <> :::x_'|--'_x not
R12863:12866 VC.Verif_append1 <> lseg def
R12881:12881 VC.Verif_append1 <> z var
R12879:12879 VC.Verif_append1 <> x var
R12871:12874 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R12869:12870 VC.Verif_append1 <> s1 var
R12875:12876 VC.Verif_append1 <> s2 var
R12887:12889 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R12891:12892 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R12896:12897 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R12909:12911 VST.msl.seplog <> ::logic:x_'*'_x not
R12898:12901 VC.Verif_append1 <> lseg def
R12908:12908 VC.Verif_append1 <> y var
R12906:12906 VC.Verif_append1 <> x var
R12903:12904 VC.Verif_append1 <> s1 var
R12912:12915 VC.Verif_append1 <> lseg def
R12922:12922 VC.Verif_append1 <> z var
R12920:12920 VC.Verif_append1 <> y var
R12917:12918 VC.Verif_append1 <> s2 var
R12893:12895 compcert.common.Values <> val ind
prf 13047:13070 <> loopy_lseg_no_connection
R13104:13109 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13119:13124 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13130:13135 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13161:13165 VST.msl.seplog <> :::x_'|--'_x not
R13147:13149 VST.msl.seplog <> ::logic:x_'*'_x not
R13136:13139 VC.Verif_append1 <> lseg def
R13146:13146 VC.Verif_append1 <> y var
R13144:13144 VC.Verif_append1 <> x var
R13141:13142 VC.Verif_append1 <> s1 var
R13150:13153 VC.Verif_append1 <> lseg def
R13160:13160 VC.Verif_append1 <> z var
R13158:13158 VC.Verif_append1 <> y var
R13155:13156 VC.Verif_append1 <> s2 var
R13166:13167 VST.msl.seplog <> FF meth
R13126:13128 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13125:13125 VC.Verif_append1 <> x var
R13129:13129 VC.Verif_append1 <> y var
R13112:13115 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R13110:13111 VC.Verif_append1 <> s2 var
R13116:13118 Coq.Init.Datatypes <> nil constr
R13097:13100 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R13095:13096 VC.Verif_append1 <> s1 var
R13101:13103 Coq.Init.Datatypes <> nil constr
def 13640:13646 <> nt_lseg
R13659:13662 Coq.Init.Datatypes <> list ind
R13664:13666 compcert.common.Values <> val ind
R13675:13677 compcert.common.Values <> val ind
R13682:13686 VST.veric.mpred <> mpred def
R13699:13706 VC.Verif_append1 <> contents var
R13717:13719 Coq.Init.Datatypes <> nil constr
R13734:13737 VST.msl.seplog <> ::logic:x_'&&'_x not
R13724:13727 VST.msl.seplog <> ::logic:'!!'_x not
R13733:13733 VST.msl.seplog <> ::logic:'!!'_x not
R13729:13731 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13728:13728 VC.Verif_append1 <> x var
R13732:13732 VC.Verif_append1 <> z var
R13738:13740 VST.msl.seplog <> emp meth
R13747:13748 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13755:13757 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R13759:13759 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R13763:13764 VST.msl.seplog <> ::logic:'EX'_x_':'_x_','_x not
R13807:13809 VST.msl.seplog <> ::logic:x_'*'_x not
R13776:13779 VST.msl.seplog <> ::logic:x_'&&'_x not
R13765:13768 VST.msl.seplog <> ::logic:'!!'_x not
R13775:13775 VST.msl.seplog <> ::logic:'!!'_x not
R13770:13773 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R13769:13769 VC.Verif_append1 <> x var
R13774:13774 VC.Verif_append1 <> z var
R13780:13786 VST.floyd.field_at <> data_at def
R13806:13806 VC.Verif_append1 <> x var
R13799:13799 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13801:13802 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13804:13804 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13803:13803 VC.Verif_append1 <> y var
R13792:13797 VC.Verif_append1 <> t_list def
R13788:13790 VST.veric.shares <> Tsh def
R13810:13816 VC.Verif_append1 <> nt_lseg def
R13823:13823 VC.Verif_append1 <> z var
R13821:13821 VC.Verif_append1 <> y var
R13760:13762 compcert.common.Values <> val ind
R13843:13849 VC.Verif_append1 <> nt_lseg def
prf 15222:15238 <> singleton_nt_lseg
R15259:15262 Coq.Init.Datatypes <> list ind
R15264:15266 compcert.common.Values <> val ind
R15277:15279 compcert.common.Values <> val ind
R15333:15339 VST.msl.seplog <> :::x_'|--'_x not
R15312:15314 VST.msl.seplog <> ::logic:x_'*'_x not
R15285:15291 VST.floyd.field_at <> data_at def
R15311:15311 VC.Verif_append1 <> x var
R15304:15304 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15306:15307 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15309:15309 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15305:15305 VC.Verif_append1 <> a var
R15308:15308 VC.Verif_append1 <> y var
R15297:15302 VC.Verif_append1 <> t_list def
R15293:15295 VST.veric.shares <> Tsh def
R15315:15321 VC.Verif_append1 <> listrep def
R15332:15332 VC.Verif_append1 <> y var
R15323:15330 VC.Verif_append1 <> contents var
R15355:15357 VST.msl.seplog <> ::logic:x_'*'_x not
R15340:15346 VC.Verif_append1 <> nt_lseg def
R15354:15354 VC.Verif_append1 <> y var
R15352:15352 VC.Verif_append1 <> x var
R15348:15348 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R15350:15350 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R15349:15349 VC.Verif_append1 <> a var
R15358:15364 VC.Verif_append1 <> listrep def
R15375:15375 VC.Verif_append1 <> y var
R15366:15373 VC.Verif_append1 <> contents var
prf 15504:15521 <> singleton_nt_lseg'
R15543:15545 compcert.common.Values <> val ind
R15608:15614 VST.msl.seplog <> :::x_'|--'_x not
R15578:15580 VST.msl.seplog <> ::logic:x_'*'_x not
R15551:15557 VST.floyd.field_at <> data_at def
R15577:15577 VC.Verif_append1 <> x var
R15570:15570 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15572:15573 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15575:15575 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15571:15571 VC.Verif_append1 <> a var
R15574:15574 VC.Verif_append1 <> y var
R15563:15568 VC.Verif_append1 <> t_list def
R15559:15561 VST.veric.shares <> Tsh def
R15581:15587 VST.floyd.field_at <> data_at def
R15607:15607 VC.Verif_append1 <> y var
R15600:15600 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15602:15603 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15605:15605 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15601:15601 VC.Verif_append1 <> b var
R15604:15604 VC.Verif_append1 <> z var
R15593:15598 VC.Verif_append1 <> t_list def
R15589:15591 VST.veric.shares <> Tsh def
R15630:15632 VST.msl.seplog <> ::logic:x_'*'_x not
R15615:15621 VC.Verif_append1 <> nt_lseg def
R15629:15629 VC.Verif_append1 <> y var
R15627:15627 VC.Verif_append1 <> x var
R15623:15623 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R15625:15625 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R15624:15624 VC.Verif_append1 <> a var
R15633:15639 VST.floyd.field_at <> data_at def
R15659:15659 VC.Verif_append1 <> y var
R15652:15652 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15654:15655 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15657:15657 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15653:15653 VC.Verif_append1 <> b var
R15656:15656 VC.Verif_append1 <> z var
R15645:15650 VC.Verif_append1 <> t_list def
R15641:15643 VST.veric.shares <> Tsh def
prf 15785:15799 <> nt_lseg_nt_lseg
R15817:15820 Coq.Init.Datatypes <> list ind
R15822:15824 compcert.common.Values <> val ind
R15839:15841 compcert.common.Values <> val ind
R15908:15914 VST.msl.seplog <> :::x_'|--'_x not
R15878:15880 VST.msl.seplog <> ::logic:x_'*'_x not
R15861:15863 VST.msl.seplog <> ::logic:x_'*'_x not
R15847:15853 VC.Verif_append1 <> nt_lseg def
R15860:15860 VC.Verif_append1 <> y var
R15858:15858 VC.Verif_append1 <> x var
R15855:15856 VC.Verif_append1 <> s1 var
R15864:15870 VC.Verif_append1 <> nt_lseg def
R15877:15877 VC.Verif_append1 <> z var
R15875:15875 VC.Verif_append1 <> y var
R15872:15873 VC.Verif_append1 <> s2 var
R15881:15887 VST.floyd.field_at <> data_at def
R15907:15907 VC.Verif_append1 <> z var
R15900:15900 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15902:15903 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15905:15905 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15901:15901 VC.Verif_append1 <> a var
R15904:15904 VC.Verif_append1 <> u var
R15893:15898 VC.Verif_append1 <> t_list def
R15889:15891 VST.veric.shares <> Tsh def
R15937:15939 VST.msl.seplog <> ::logic:x_'*'_x not
R15915:15921 VC.Verif_append1 <> nt_lseg def
R15936:15936 VC.Verif_append1 <> z var
R15934:15934 VC.Verif_append1 <> x var
R15926:15929 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15924:15925 VC.Verif_append1 <> s1 var
R15930:15931 VC.Verif_append1 <> s2 var
R15940:15946 VST.floyd.field_at <> data_at def
R15966:15966 VC.Verif_append1 <> z var
R15959:15959 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15961:15962 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15964:15964 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15960:15960 VC.Verif_append1 <> a var
R15963:15963 VC.Verif_append1 <> u var
R15952:15957 VC.Verif_append1 <> t_list def
R15948:15950 VST.veric.shares <> Tsh def
prf 16320:16331 <> nt_lseg_list
R16349:16352 Coq.Init.Datatypes <> list ind
R16354:16356 compcert.common.Values <> val ind
R16365:16367 compcert.common.Values <> val ind
R16402:16406 VST.msl.seplog <> :::x_'|--'_x not
R16387:16389 VST.msl.seplog <> ::logic:x_'*'_x not
R16373:16379 VC.Verif_append1 <> nt_lseg def
R16386:16386 VC.Verif_append1 <> y var
R16384:16384 VC.Verif_append1 <> x var
R16381:16382 VC.Verif_append1 <> s1 var
R16390:16396 VC.Verif_append1 <> listrep def
R16401:16401 VC.Verif_append1 <> y var
R16398:16399 VC.Verif_append1 <> s2 var
R16407:16413 VC.Verif_append1 <> listrep def
R16426:16426 VC.Verif_append1 <> x var
R16418:16421 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16416:16417 VC.Verif_append1 <> s1 var
R16422:16423 VC.Verif_append1 <> s2 var
prf 16654:16671 <> body_append_alter1
R16674:16683 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R16706:16716 VC.Verif_append1 <> append_spec def
R16697:16704 VC.append <> f_append def
R16691:16695 VC.Verif_append1 <> Gprog def
R16685:16689 VC.Verif_append1 <> Vprog def
R16801:16812 VC.Verif_append1 <> listrep_null prfax
R16801:16812 VC.Verif_append1 <> listrep_null prfax
R16801:16812 VC.Verif_append1 <> listrep_null prfax
R16881:16895 VC.Verif_append1 <> listrep_nonnull prfax
R16881:16895 VC.Verif_append1 <> listrep_nonnull prfax
R16881:16895 VC.Verif_append1 <> listrep_nonnull prfax
